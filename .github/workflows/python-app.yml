# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ] # or your default branch like "master"
  pull_request:
    branches: [ "main" ] # or your default branch

permissions:
  contents: read # Needed to checkout code

jobs:
  build:

    runs-on: ubuntu-latest # Or your preferred runner environment
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4 # Checkout your code
    - name: Set up Python ${{ matrix.python-version }} # Specify the Python version to use
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Cache dependencies to speed up builds
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt # Install packages from requirements-dev.txt (includes pytest)
#    - name: Analysing the code with pylint
#      run: |
#        pylint $(git ls-files '*.py')
    - name: Lint with flake8 # Optional: Add linting
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pip install flake8 # Make sure flake8 is in requirements-dev.txt
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest # Run your tests
      env:
        # Add the current directory (the repo root) to Python's search path
        PYTHONPATH: .
      run: |
        pytest # pytest will discover and run your tests
